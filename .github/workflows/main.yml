# This is a basic workflow to help you get started with Actions

name: DB conflicts check. 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    types:
      - opened
      - reopened
      - edited

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Merge PR locally
      run: |
        git fetch origin
        git checkout ${GITHUB_BASE_REF}
        git config user.email "you@example.com"
        git config user.name "Your Name"
        git merge origin/${GITHUB_HEAD_REF}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: install alembic dependency
      run: |
        pip install alembic
        python --version
    - name: Init alembic workdir
      working-directory: webapp/migrations/versions
      run: alembic init alembic
    - name: Extract pure revision info.
      working-directory: webapp/migrations/versions
      run: for f in *.py; do cat $f | grep revision > "alembic/versions/$f"; done
    - name: Check heads
      working-directory: webapp/migrations/versions
      run: |
        heads=$(alembic heads)
        echo "Get head(s): "
        echo $heads
        head_count=$(echo "$heads" | wc -l | awk '$1=$1')
        echo "Head count is:"
        echo $head_count
        if [ $head_count != "1" ]; then echo "There hash multiple heads, please check!"; echo $heads; exit 1; fi
